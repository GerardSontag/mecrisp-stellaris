\ file:    gpio.txt
\ summary: gpio configuration for stm32f411 nucleo board
\ author:  jean jonethal
\ license: public domain

\ require bits! from utils.txt

\ some documentation
\ datasheet stm32f411 "E:\stm\DM00115249 STM32F411xC STM32F411xE.pdf"
\ "C:\Users\jeanjo\Downloads\stm\DM00115249 stm32f411re data sheet.pdf"
\ "C:\Users\jeanjo\Downloads\stm\DM00119316 stm32f411re reference manual.pdf"
\ progman "E:\stm\DM00046982 PM0214 STM32F3 and STM32F4 Series Cortex-M4 programming manual.pdf"
\ ref man "E:\stm\DM00119316  RM0383 STM32F411xC_E advanced ARM-based 32-bit MCUs .pdf"

\ ***** gpio definitions ****************

$40020000 constant GPIO-BASE
: gpio ( n -- adr )
   $f and #10 lshift GPIO-BASE or 1-foldable ;
$00         constant GPIO_MODER
$04         constant GPIO_OTYPER
$08         constant GPIO_OSPEEDR
$0C         constant GPIO_PUPDR
$10         constant GPIO_IDR
$14         constant GPIO_ODR
$18         constant GPIO_BSRR
$1C         constant GPIO_LCKR
$20         constant GPIO_AFRL
$24         constant GPIO_AFRH

#0  GPIO    constant GPIOA
#1  GPIO    constant GPIOB
#2  GPIO    constant GPIOC
#3  GPIO    constant GPIOD
#4  GPIO    constant GPIOE
#5  GPIO    constant GPIOF
#6  GPIO    constant GPIOG
#7  GPIO    constant GPIOH
#8  GPIO    constant GPIOI
#9  GPIO    constant GPIOJ
#10 GPIO    constant GPIOK

: pin#  ( pin -- nr )                    \ get pin number from pin
   $f and 1-foldable ;
: port-base  ( pin -- adr )              \ get port base from pin
   $f bic 1-foldable ;
: port# ( pin -- n )                     \ return gpio port number A:0 .. K:10
   #10 rshift $f and 1-foldable ;
: gpio-mode-mask  ( pin -- m )
   #3 swap pin# 2* lshift 1-foldable ;
: mode-shift ( mode pin -- mode<< )      \ shift mode by pin number * 2 for gpio_moder
   pin# 2* lshift 2-foldable ;
: set-mask! ( v m a -- )
   tuck @ swap bic rot or swap ! ;
: bsrr-on  ( pin -- v )                  \ gpio_bsrr mask pin on
   pin# 1 swap lshift 1-foldable ;
: bsrr-off  ( pin -- v )                 \ gpio_bsrr mask pin off
   pin# #16 + 1 swap lshift 1-foldable ;
: af-mask  ( pin -- mask )               \ alternate function bitmask
   $7 and #2 lshift $f swap lshift 1-foldable ;
: af-reg  ( pin -- adr )                 \ alternate function register address for pin
   dup $8 and 2/ swap
   port-base GPIO_AFRL + + 1-foldable ;
: af-shift ( af pin -- af )
   pin# #2 lshift swap lshift 2-foldable ;
: gpio-mode! ( mode pin -- )             \ set gpio mode 0-in 1-out 2-af
   dup gpio-mode-mask swap port-base bits! ;
: gpio-speed! ( n pin -- )               \ set gpio speed 0-low 1-med 2-fast 3-high
   dup gpio-mode-mask
   swap port-base GPIO_OSPEEDR + bits! ;
: mode-af ( af pin -- )                  \ select alternate function for pin
   #2 over gpio-mode!
   dup af-mask swap af-reg bits! ;
: mode-af-fast ( af pin -- )             \ select alternate function high speed io mode
   #2 over gpio-speed! mode-af ;
: gpio-pupd! ( mode pin -- )             \ set gpio pull/up/down 0-no,1-pull up, 2 pull-down
   dup gpio-mode-mask
   swap port-base GPIO_PUPDR + bits! ;
