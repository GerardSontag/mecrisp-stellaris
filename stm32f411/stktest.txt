compiletoflash
\ systick access

base @           \ backup base
decimal

$E000E010   constant STK_CTRL
1 16 lshift constant STK_CTRL_COUNTFLAG
1  2 lshift constant STK_CTRL_CLKSOURCE_DIV_1
1  1 lshift constant STK_CTRL_TICKINT
1           constant STK_CTRL_ENABLE

$E000E014   constant STK_LOAD
$E000E018   constant STK_VAL
$E000E01C   constant STK_CALIB

$00FFFFFF                                   constant STK_RELOAD_VAL
STK_RELOAD_VAL   1+                         constant STK_CYCLE
STK_CTRL_ENABLE STK_CTRL_CLKSOURCE_DIV_1 or constant STK_INIT_VAL

base !           \ restore base


0  variable syscounter

: systick-handler   ( -- )             \ handler for systick interrupt
  syscounter @                         \ put old systick overflow counter on stack
  STK_CTRL @ STK_CTRL_COUNTFLAG and    \ check for overflow flag
  0<> - syscounter ! ;                 \ make flag 0/-1 substract from syscounter

: systick-int-init  ( -- )   ['] systick-handler irq-systick ! STK_CTRL @ STK_CTRL_TICKINT or STK_CTRL ! ;
: systick-start     ( -- )   STK_CTRL @ STK_CTRL_ENABLE or      STK_CTRL ! ;
: systick-stop      ( -- )   STK_CTRL @ STK_CTRL_ENABLE not and STK_CTRL ! ;
: systick-reset     ( -- )   0 STK_CTRL ! 0 STK_VAL ! ;
: systick-init      ( -- )   systick-reset STK_RELOAD_VAL STK_LOAD ! STK_INIT_VAL STK_CTRL ! ;

: systick-run       ( -- )   \ start systick timer
  systick-init systick-int-init systick-start ;

: systicks          ( -- u ) \ put systick counter val on T
  STK_VAL @ ;

: .systicks         ( -- )   \ print current systicks
  systicks . ;

: time-stamp        ( -- tsl tsh )
  systicks syscounter @ systicks syscounter @ ( st1 sc1 st2 sc2 )
  rot                   ( st1 st2 sc2 sc1 )
  2dup                  ( st1 st2 sc2 sc1 sc2 sc1)
  = if                  ( st1 st2 sc2 sc1 ) 
    drop                ( st1 st2 sc2 )
	rot drop            ( st2 sc2 )
  else                  ( st1 st2 sc2 sc1 )
    -rot                ( st1 sc1 st2 sc2 )
	2drop               ( st1 sc1 )
  then
  STK_CYCLE um*         ( st scl sch )
  rot                   ( scl sch st )
  STK_RELOAD_VAL -
  negate 0              ( scl sch st )
  d+ ( tsl tsh )
  ;

: time-stamp2       ( -- tsl tsh )
  systicks syscounter @ systicks syscounter @ ( st1 sc1 st2 sc2 )
  dup                   ( st1 sc1 st2 sc2 sc2 )
  3 pick                ( st1 sc1 st2 sc2 sc2 sc1 )
  = if                  ( st1 sc1 st2 sc2 ) 
    2swap               ( st2 sc2 st1 sc1 )
	2drop               ( st2 sc2 )
  else                  ( st1 sc1 st2 sc2 ) 
	2drop               ( st1 sc1 )
  then
  STK_CYCLE um*         ( st  scl sch )
  rot                   ( scl sch st )
  STK_RELOAD_VAL -
  negate 0              ( scl sch st 0 )
  d+ ( tsl tsh )
  ;

compiletoram

  
: tsb1              ( -- )
	." Timestamp 1 " time-stamp time-stamp   d- dnegate ud. ;

: tsb2              ( -- )
	." Timestamp 2 " time-stamp2 time-stamp2 d- dnegate ud. ;
	
  
\ if syscounter1 == syscounter2 :
\   ts = systicks1
\   syscounter = syscounter1
\   if systicks2 > systicks1 : overflow
\     syscounter = syscounter + 1
\ else
\   ts = systicks2
\  


: bench systick-init systicks systicks - . ;

systick-run
bench
tsb1
tsb2
